!function(e){if("object"==typeof exports)module.exports=e();else if("function"==typeof define&&define.amd)define(e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.PF=e()}}(function(){var define,module,exports;return(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){module.exports=_dereq_('./lib/heap');},{"./lib/heap":2}],2:[function(_dereq_,module,exports){(function(){var Heap,defaultCmp,floor,heapify,heappop,heappush,heappushpop,heapreplace,insort,min,nlargest,nsmallest,updateItem,_siftdown,_siftup;floor=Math.floor,min=Math.min;defaultCmp=function(x,y){if(x<y){return-1;};if(x>y){return 1;};return 0;};insort=function(a,x,lo,hi,cmp){var mid;if(lo==null){lo=0;};if(cmp==null){cmp=defaultCmp;};if(lo<0){throw new Error('lo must be non-negative');};if(hi==null){hi=a.length;};while(lo<hi){mid=floor((lo+hi)/2);if(cmp(x,a[mid])<0){hi=mid;}else{lo=mid+1;}};return([].splice.apply(a,[lo,lo-lo].concat(x)),x);};heappush=function(array,item,cmp){if(cmp==null){cmp=defaultCmp;};array.push(item);return _siftdown(array,0,array.length-1,cmp);};heappop=function(array,cmp){var lastelt,returnitem;if(cmp==null){cmp=defaultCmp;};lastelt=array.pop();if(array.length){returnitem=array[0];array[0]=lastelt;_siftup(array,0,cmp);}else{returnitem=lastelt;};return returnitem;};heapreplace=function(array,item,cmp){var returnitem;if(cmp==null){cmp=defaultCmp;};returnitem=array[0];array[0]=item;_siftup(array,0,cmp);return returnitem;};heappushpop=function(array,item,cmp){var _ref;if(cmp==null){cmp=defaultCmp;};if(array.length&&cmp(array[0],item)<0){_ref=[array[0],item],item=_ref[0],array[0]=_ref[1];_siftup(array,0,cmp);};return item;};heapify=function(array,cmp){var i,_i,_j,_len,_ref,_ref1,_results,_results1;if(cmp==null){cmp=defaultCmp;};_ref1=(function(){_results1=[];for(var _j=0,_ref=floor(array.length/2);0<=_ref?_j<_ref:_j>_ref;0<=_ref?_j++:_j--){_results1.push(_j);};return _results1;}).apply(this).reverse();_results=[];for(_i=0,_len=_ref1.length;_i<_len;_i++){i=_ref1[_i];_results.push(_siftup(array,i,cmp));};return _results;};updateItem=function(array,item,cmp){var pos;if(cmp==null){cmp=defaultCmp;};pos=array.indexOf(item);if(pos===-1){return;};_siftdown(array,0,pos,cmp);return _siftup(array,pos,cmp);};nlargest=function(array,n,cmp){var elem,result,_i,_len,_ref;if(cmp==null){cmp=defaultCmp;};result=array.slice(0,n);if(!result.length){return result;};heapify(result,cmp);_ref=array.slice(n);for(_i=0,_len=_ref.length;_i<_len;_i++){elem=_ref[_i];heappushpop(result,elem,cmp);};return result.sort(cmp).reverse();};nsmallest=function(array,n,cmp){var elem,i,los,result,_i,_j,_len,_ref,_ref1,_results;if(cmp==null){cmp=defaultCmp;};if(n*10<=array.length){result=array.slice(0,n).sort(cmp);if(!result.length){return result;};los=result[result.length-1];_ref=array.slice(n);for(_i=0,_len=_ref.length;_i<_len;_i++){elem=_ref[_i];if(cmp(elem,los)<0){insort(result,elem,0,null,cmp);result.pop();los=result[result.length-1];}};return result;};heapify(array,cmp);_results=[];for(i=_j=0,_ref1=min(n,array.length);0<=_ref1?_j<_ref1:_j>_ref1;i=0<=_ref1?++_j:--_j){_results.push(heappop(array,cmp));};return _results;};_siftdown=function(array,startpos,pos,cmp){var newitem,parent,parentpos;if(cmp==null){cmp=defaultCmp;};newitem=array[pos];while(pos>startpos){parentpos=(pos-1)>>1;parent=array[parentpos];if(cmp(newitem,parent)<0){array[pos]=parent;pos=parentpos;continue;};break;};return array[pos]=newitem;};_siftup=function(array,pos,cmp){var childpos,endpos,newitem,rightpos,startpos;if(cmp==null){cmp=defaultCmp;};endpos=array.length;startpos=pos;newitem=array[pos];childpos=2*pos+1;while(childpos<endpos){rightpos=childpos+1;if(rightpos<endpos&&!(cmp(array[childpos],array[rightpos])<0)){childpos=rightpos;};array[pos]=array[childpos];pos=childpos;childpos=2*pos+1;};array[pos]=newitem;return _siftdown(array,startpos,pos,cmp);};Heap=(function(){Heap.push=heappush;Heap.pop=heappop;Heap.replace=heapreplace;Heap.pushpop=heappushpop;Heap.heapify=heapify;Heap.updateItem=updateItem;Heap.nlargest=nlargest;Heap.nsmallest=nsmallest;function Heap(cmp){this.cmp=cmp!=null?cmp:defaultCmp;this.nodes=[];};Heap.prototype.push=function(x){return heappush(this.nodes,x,this.cmp);};Heap.prototype.pop=function(){return heappop(this.nodes,this.cmp);};Heap.prototype.peek=function(){return this.nodes[0];};Heap.prototype.contains=function(x){return this.nodes.indexOf(x)!==-1;};Heap.prototype.replace=function(x){return heapreplace(this.nodes,x,this.cmp);};Heap.prototype.pushpop=function(x){return heappushpop(this.nodes,x,this.cmp);};Heap.prototype.heapify=function(){return heapify(this.nodes,this.cmp);};Heap.prototype.updateItem=function(x){return updateItem(this.nodes,x,this.cmp);};Heap.prototype.clear=function(){return this.nodes=[];};Heap.prototype.empty=function(){return this.nodes.length===0;};Heap.prototype.size=function(){return this.nodes.length;};Heap.prototype.clone=function(){var heap;heap=new Heap();heap.nodes=this.nodes.slice(0);return heap;};Heap.prototype.toArray=function(){return this.nodes.slice(0);};Heap.prototype.insert=Heap.prototype.push;Heap.prototype.top=Heap.prototype.peek;Heap.prototype.front=Heap.prototype.peek;Heap.prototype.has=Heap.prototype.contains;Heap.prototype.copy=Heap.prototype.clone;return Heap;})();if(typeof module!=="undefined"&&module!==null?module.exports:void 0){module.exports=Heap;}else{window.Heap=Heap;}}).call(this);},{}],3:[function(_dereq_,module,exports){var DiagonalMovement={Always:1,Never:2,IfAtMostOneObstacle:3,OnlyWhenNoObstacles:4};module.exports=DiagonalMovement;},{}],4:[function(_dereq_,module,exports){var Node=_dereq_('./Node');var DiagonalMovement=_dereq_('./DiagonalMovement');function Grid(width_or_matrix,height,matrix){var width;if(typeof width_or_matrix!=='object'){width=width_or_matrix;}else{height=width_or_matrix.length;width=width_or_matrix[0].length;matrix=width_or_matrix;};this.width=width;this.height=height;this.nodes=this._buildNodes(width,height,matrix);};Grid.prototype._buildNodes=function(width,height,matrix){var i,j,nodes=new Array(height);for(i=0;i<height;++i){nodes[i]=new Array(width);for(j=0;j<width;++j){nodes[i][j]=new Node(j,i);}};if(matrix===undefined){return nodes;};if(matrix.length!==height||matrix[0].length!==width){throw new Error('Matrix size does not fit');};for(i=0;i<height;++i){for(j=0;j<width;++j){if(matrix[i][j]){nodes[i][j].walkable=false;}}};return nodes;};Grid.prototype.getNodeAt=function(x,y){return this.nodes[y][x];};Grid.prototype.isWalkableAt=function(x,y){return this.isInside(x,y)&&this.nodes[y][x].walkable;};Grid.prototype.isInside=function(x,y){return(x>=0&&x<this.width)&&(y>=0&&y<this.height);};Grid.prototype.setWalkableAt=function(x,y,walkable){this.nodes[y][x].walkable=walkable;};Grid.prototype.getNeighbors=function(node,diagonalMovement){var x=node.x,y=node.y,neighbors=[],s0=false,d0=false,s1=false,d1=false,s2=false,d2=false,s3=false,d3=false,nodes=this.nodes;if(this.isWalkableAt(x,y-1)){neighbors.push(nodes[y-1][x]);s0=true;};if(this.isWalkableAt(x+1,y)){neighbors.push(nodes[y][x+1]);s1=true;};if(this.isWalkableAt(x,y+1)){neighbors.push(nodes[y+1][x]);s2=true;};if(this.isWalkableAt(x-1,y)){neighbors.push(nodes[y][x-1]);s3=true;};if(diagonalMovement===DiagonalMovement.Never){return neighbors;};if(diagonalMovement===DiagonalMovement.OnlyWhenNoObstacles){d0=s3&&s0;d1=s0&&s1;d2=s1&&s2;d3=s2&&s3;}else if(diagonalMovement===DiagonalMovement.IfAtMostOneObstacle){d0=s3||s0;d1=s0||s1;d2=s1||s2;d3=s2||s3;}else if(diagonalMovement===DiagonalMovement.Always){d0=true;d1=true;d2=true;d3=true;}else{throw new Error('Incorrect value of diagonalMovement');};if(d0&&this.isWalkableAt(x-1,y-1)){neighbors.push(nodes[y-1][x-1]);};if(d1&&this.isWalkableAt(x+1,y-1)){neighbors.push(nodes[y-1][x+1]);};if(d2&&this.isWalkableAt(x+1,y+1)){neighbors.push(nodes[y+1][x+1]);};if(d3&&this.isWalkableAt(x-1,y+1)){neighbors.push(nodes[y+1][x-1]);};return neighbors;};Grid.prototype.clone=function(){var i,j,width=this.width,height=this.height,thisNodes=this.nodes,newGrid=new Grid(width,height),newNodes=new Array(height);for(i=0;i<height;++i){newNodes[i]=new Array(width);for(j=0;j<width;++j){newNodes[i][j]=new Node(j,i,thisNodes[i][j].walkable);}};newGrid.nodes=newNodes;return newGrid;};module.exports=Grid;},{"./DiagonalMovement":3,"./Node":6}],5:[function(_dereq_,module,exports){module.exports={manhattan:function(dx,dy){return dx+dy;},euclidean:function(dx,dy){return Math.sqrt(dx*dx+dy*dy);},octile:function(dx,dy){var F=Math.SQRT2-1;return(dx<dy)?F*dx+dy:F*dy+dx;},chebyshev:function(dx,dy){return Math.max(dx,dy);}};},{}],6:[function(_dereq_,module,exports){function Node(x,y,walkable){this.x=x;this.y=y;this.walkable=(walkable===undefined?true:walkable);};module.exports=Node;},{}],7:[function(_dereq_,module,exports){function backtrace(node){var path=[[node.x,node.y]];while(node.parent){node=node.parent;path.push([node.x,node.y]);};return path.reverse();};exports.backtrace=backtrace;function biBacktrace(nodeA,nodeB){var pathA=backtrace(nodeA),pathB=backtrace(nodeB);return pathA.concat(pathB.reverse());};exports.biBacktrace=biBacktrace;function pathLength(path){var i,sum=0,a,b,dx,dy;for(i=1;i<path.length;++i){a=path[i-1];b=path[i];dx=a[0]-b[0];dy=a[1]-b[1];sum+=Math.sqrt(dx*dx+dy*dy);};return sum;};exports.pathLength=pathLength;function interpolate(x0,y0,x1,y1){var abs=Math.abs,line=[],sx,sy,dx,dy,err,e2;dx=abs(x1-x0);dy=abs(y1-y0);sx=(x0<x1)?1:-1;sy=(y0<y1)?1:-1;err=dx-dy;while(true){line.push([x0,y0]);if(x0===x1&&y0===y1){break;};e2=2*err;if(e2>-dy){err=err-dy;x0=x0+sx;};if(e2<dx){err=err+dx;y0=y0+sy;}};return line;};exports.interpolate=interpolate;function expandPath(path){var expanded=[],len=path.length,coord0,coord1,interpolated,interpolatedLen,i,j;if(len<2){return expanded;};for(i=0;i<len-1;++i){coord0=path[i];coord1=path[i+1];interpolated=interpolate(coord0[0],coord0[1],coord1[0],coord1[1]);interpolatedLen=interpolated.length;for(j=0;j<interpolatedLen-1;++j){expanded.push(interpolated[j]);}};expanded.push(path[len-1]);return expanded;};exports.expandPath=expandPath;function smoothenPath(grid,path){var len=path.length,x0=path[0][0],y0=path[0][1],x1=path[len-1][0],y1=path[len-1][1],sx,sy,ex,ey,newPath,i,j,coord,line,testCoord,blocked;sx=x0;sy=y0;newPath=[[sx,sy]];for(i=2;i<len;++i){coord=path[i];ex=coord[0];ey=coord[1];line=interpolate(sx,sy,ex,ey);blocked=false;for(j=1;j<line.length;++j){testCoord=line[j];if(!grid.isWalkableAt(testCoord[0],testCoord[1])){blocked=true;break;}};if(blocked){lastValidCoord=path[i-1];newPath.push(lastValidCoord);sx=lastValidCoord[0];sy=lastValidCoord[1];}};newPath.push([x1,y1]);return newPath;};exports.smoothenPath=smoothenPath;function compressPath(path){if(path.length<3){return path;};var compressed=[],sx=path[0][0],sy=path[0][1],px=path[1][0],py=path[1][1],dx=px-sx,dy=py-sy,lx,ly,ldx,ldy,sq,i;sq=Math.sqrt(dx*dx+dy*dy);dx/=sq;dy/=sq;compressed.push([sx,sy]);for(i=2;i<path.length;i++){lx=px;ly=py;ldx=dx;ldy=dy;px=path[i][0];py=path[i][1];dx=px-lx;dy=py-ly;sq=Math.sqrt(dx*dx+dy*dy);dx/=sq;dy/=sq;if(dx!==ldx||dy!==ldy){compressed.push([lx,ly]);}};compressed.push([px,py]);return compressed;};exports.compressPath=compressPath;},{}],8:[function(_dereq_,module,exports){module.exports={'Heap':_dereq_('heap'),'Node':_dereq_('./core/Node'),'Grid':_dereq_('./core/Grid'),'Util':_dereq_('./core/Util'),'DiagonalMovement':_dereq_('./core/DiagonalMovement'),'Heuristic':_dereq_('./core/Heuristic'),'AStarFinder':_dereq_('./finders/AStarFinder'),'BestFirstFinder':_dereq_('./finders/BestFirstFinder'),'BreadthFirstFinder':_dereq_('./finders/BreadthFirstFinder'),'DijkstraFinder':_dereq_('./finders/DijkstraFinder'),'BiAStarFinder':_dereq_('./finders/BiAStarFinder'),'BiBestFirstFinder':_dereq_('./finders/BiBestFirstFinder'),'BiBreadthFirstFinder':_dereq_('./finders/BiBreadthFirstFinder'),'BiDijkstraFinder':_dereq_('./finders/BiDijkstraFinder'),'IDAStarFinder':_dereq_('./finders/IDAStarFinder'),'JumpPointFinder':_dereq_('./finders/JumpPointFinder'),};},{"./core/DiagonalMovement":3,"./core/Grid":4,"./core/Heuristic":5,"./core/Node":6,"./core/Util":7,"./finders/AStarFinder":9,"./finders/BestFirstFinder":10,"./finders/BiAStarFinder":11,"./finders/BiBestFirstFinder":12,"./finders/BiBreadthFirstFinder":13,"./finders/BiDijkstraFinder":14,"./finders/BreadthFirstFinder":15,"./finders/DijkstraFinder":16,"./finders/IDAStarFinder":17,"./finders/JumpPointFinder":22,"heap":1}],9:[function(_dereq_,module,exports){var Heap=_dereq_('heap');var Util=_dereq_('../core/Util');var Heuristic=_dereq_('../core/Heuristic');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function AStarFinder(opt){opt=opt||{};this.allowDiagonal=opt.allowDiagonal;this.dontCrossCorners=opt.dontCrossCorners;this.heuristic=opt.heuristic||Heuristic.manhattan;this.weight=opt.weight||1;this.diagonalMovement=opt.diagonalMovement;if(!this.diagonalMovement){if(!this.allowDiagonal){this.diagonalMovement=DiagonalMovement.Never;}else{if(this.dontCrossCorners){this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles;}else{this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle;}}};if(this.diagonalMovement===DiagonalMovement.Never){this.heuristic=opt.heuristic||Heuristic.manhattan;}else{this.heuristic=opt.heuristic||Heuristic.octile;}};AStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var openList=new Heap(function(nodeA,nodeB){return nodeA.f-nodeB.f;}),startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),heuristic=this.heuristic,diagonalMovement=this.diagonalMovement,weight=this.weight,abs=Math.abs,SQRT2=Math.SQRT2,node,neighbors,neighbor,i,l,x,y,ng;startNode.g=0;startNode.f=0;openList.push(startNode);startNode.opened=true;while(!openList.empty()){node=openList.pop();node.closed=true;if(node===endNode){return Util.backtrace(endNode);};neighbors=grid.getNeighbors(node,diagonalMovement);for(i=0,l=neighbors.length;i<l;++i){neighbor=neighbors[i];if(neighbor.closed){continue;};x=neighbor.x;y=neighbor.y;ng=node.g+((x-node.x===0||y-node.y===0)?1:SQRT2);if(!neighbor.opened||ng<neighbor.g){neighbor.g=ng;neighbor.h=neighbor.h||weight*heuristic(abs(x-endX),abs(y-endY));neighbor.f=neighbor.g+neighbor.h;neighbor.parent=node;if(!neighbor.opened){openList.push(neighbor);neighbor.opened=true;}else{openList.updateItem(neighbor);}}}};return[];};module.exports=AStarFinder;},{"../core/DiagonalMovement":3,"../core/Heuristic":5,"../core/Util":7,"heap":1}],10:[function(_dereq_,module,exports){var AStarFinder=_dereq_('./AStarFinder');function BestFirstFinder(opt){AStarFinder.call(this,opt);var orig=this.heuristic;this.heuristic=function(dx,dy){return orig(dx,dy)*1000000;};};BestFirstFinder.prototype=new AStarFinder();BestFirstFinder.prototype.constructor=BestFirstFinder;module.exports=BestFirstFinder;},{"./AStarFinder":9}],11:[function(_dereq_,module,exports){var Heap=_dereq_('heap');var Util=_dereq_('../core/Util');var Heuristic=_dereq_('../core/Heuristic');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function BiAStarFinder(opt){opt=opt||{};this.allowDiagonal=opt.allowDiagonal;this.dontCrossCorners=opt.dontCrossCorners;this.diagonalMovement=opt.diagonalMovement;this.heuristic=opt.heuristic||Heuristic.manhattan;this.weight=opt.weight||1;if(!this.diagonalMovement){if(!this.allowDiagonal){this.diagonalMovement=DiagonalMovement.Never;}else{if(this.dontCrossCorners){this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles;}else{this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle;}}};if(this.diagonalMovement===DiagonalMovement.Never){this.heuristic=opt.heuristic||Heuristic.manhattan;}else{this.heuristic=opt.heuristic||Heuristic.octile;}};BiAStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var cmp=function(nodeA,nodeB){return nodeA.f-nodeB.f;},startOpenList=new Heap(cmp),endOpenList=new Heap(cmp),startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),heuristic=this.heuristic,diagonalMovement=this.diagonalMovement,weight=this.weight,abs=Math.abs,SQRT2=Math.SQRT2,node,neighbors,neighbor,i,l,x,y,ng,BY_START=1,BY_END=2;startNode.g=0;startNode.f=0;startOpenList.push(startNode);startNode.opened=BY_START;endNode.g=0;endNode.f=0;endOpenList.push(endNode);endNode.opened=BY_END;while(!startOpenList.empty()&&!endOpenList.empty()){node=startOpenList.pop();node.closed=true;neighbors=grid.getNeighbors(node,diagonalMovement);for(i=0,l=neighbors.length;i<l;++i){neighbor=neighbors[i];if(neighbor.closed){continue;};if(neighbor.opened===BY_END){return Util.biBacktrace(node,neighbor);};x=neighbor.x;y=neighbor.y;ng=node.g+((x-node.x===0||y-node.y===0)?1:SQRT2);if(!neighbor.opened||ng<neighbor.g){neighbor.g=ng;neighbor.h=neighbor.h||weight*heuristic(abs(x-endX),abs(y-endY));neighbor.f=neighbor.g+neighbor.h;neighbor.parent=node;if(!neighbor.opened){startOpenList.push(neighbor);neighbor.opened=BY_START;}else{startOpenList.updateItem(neighbor);}}};node=endOpenList.pop();node.closed=true;neighbors=grid.getNeighbors(node,diagonalMovement);for(i=0,l=neighbors.length;i<l;++i){neighbor=neighbors[i];if(neighbor.closed){continue;};if(neighbor.opened===BY_START){return Util.biBacktrace(neighbor,node);};x=neighbor.x;y=neighbor.y;ng=node.g+((x-node.x===0||y-node.y===0)?1:SQRT2);if(!neighbor.opened||ng<neighbor.g){neighbor.g=ng;neighbor.h=neighbor.h||weight*heuristic(abs(x-startX),abs(y-startY));neighbor.f=neighbor.g+neighbor.h;neighbor.parent=node;if(!neighbor.opened){endOpenList.push(neighbor);neighbor.opened=BY_END;}else{endOpenList.updateItem(neighbor);}}}};return[];};module.exports=BiAStarFinder;},{"../core/DiagonalMovement":3,"../core/Heuristic":5,"../core/Util":7,"heap":1}],12:[function(_dereq_,module,exports){var BiAStarFinder=_dereq_('./BiAStarFinder');function BiBestFirstFinder(opt){BiAStarFinder.call(this,opt);var orig=this.heuristic;this.heuristic=function(dx,dy){return orig(dx,dy)*1000000;};};BiBestFirstFinder.prototype=new BiAStarFinder();BiBestFirstFinder.prototype.constructor=BiBestFirstFinder;module.exports=BiBestFirstFinder;},{"./BiAStarFinder":11}],13:[function(_dereq_,module,exports){var Util=_dereq_('../core/Util');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function BiBreadthFirstFinder(opt){opt=opt||{};this.allowDiagonal=opt.allowDiagonal;this.dontCrossCorners=opt.dontCrossCorners;this.diagonalMovement=opt.diagonalMovement;if(!this.diagonalMovement){if(!this.allowDiagonal){this.diagonalMovement=DiagonalMovement.Never;}else{if(this.dontCrossCorners){this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles;}else{this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle;}}}};BiBreadthFirstFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),startOpenList=[],endOpenList=[],neighbors,neighbor,node,diagonalMovement=this.diagonalMovement,BY_START=0,BY_END=1,i,l;startOpenList.push(startNode);startNode.opened=true;startNode.by=BY_START;endOpenList.push(endNode);endNode.opened=true;endNode.by=BY_END;while(startOpenList.length&&endOpenList.length){node=startOpenList.shift();node.closed=true;neighbors=grid.getNeighbors(node,diagonalMovement);for(i=0,l=neighbors.length;i<l;++i){neighbor=neighbors[i];if(neighbor.closed){continue;};if(neighbor.opened){if(neighbor.by===BY_END){return Util.biBacktrace(node,neighbor);};continue;};startOpenList.push(neighbor);neighbor.parent=node;neighbor.opened=true;neighbor.by=BY_START;};node=endOpenList.shift();node.closed=true;neighbors=grid.getNeighbors(node,diagonalMovement);for(i=0,l=neighbors.length;i<l;++i){neighbor=neighbors[i];if(neighbor.closed){continue;};if(neighbor.opened){if(neighbor.by===BY_START){return Util.biBacktrace(neighbor,node);};continue;};endOpenList.push(neighbor);neighbor.parent=node;neighbor.opened=true;neighbor.by=BY_END;}};return[];};module.exports=BiBreadthFirstFinder;},{"../core/DiagonalMovement":3,"../core/Util":7}],14:[function(_dereq_,module,exports){var BiAStarFinder=_dereq_('./BiAStarFinder');function BiDijkstraFinder(opt){BiAStarFinder.call(this,opt);this.heuristic=function(dx,dy){return 0;};};BiDijkstraFinder.prototype=new BiAStarFinder();BiDijkstraFinder.prototype.constructor=BiDijkstraFinder;module.exports=BiDijkstraFinder;},{"./BiAStarFinder":11}],15:[function(_dereq_,module,exports){var Util=_dereq_('../core/Util');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function BreadthFirstFinder(opt){opt=opt||{};this.allowDiagonal=opt.allowDiagonal;this.dontCrossCorners=opt.dontCrossCorners;this.diagonalMovement=opt.diagonalMovement;if(!this.diagonalMovement){if(!this.allowDiagonal){this.diagonalMovement=DiagonalMovement.Never;}else{if(this.dontCrossCorners){this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles;}else{this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle;}}}};BreadthFirstFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var openList=[],diagonalMovement=this.diagonalMovement,startNode=grid.getNodeAt(startX,startY),endNode=grid.getNodeAt(endX,endY),neighbors,neighbor,node,i,l;openList.push(startNode);startNode.opened=true;while(openList.length){node=openList.shift();node.closed=true;if(node===endNode){return Util.backtrace(endNode);};neighbors=grid.getNeighbors(node,diagonalMovement);for(i=0,l=neighbors.length;i<l;++i){neighbor=neighbors[i];if(neighbor.closed||neighbor.opened){continue;};openList.push(neighbor);neighbor.opened=true;neighbor.parent=node;}};return[];};module.exports=BreadthFirstFinder;},{"../core/DiagonalMovement":3,"../core/Util":7}],16:[function(_dereq_,module,exports){var AStarFinder=_dereq_('./AStarFinder');function DijkstraFinder(opt){AStarFinder.call(this,opt);this.heuristic=function(dx,dy){return 0;};};DijkstraFinder.prototype=new AStarFinder();DijkstraFinder.prototype.constructor=DijkstraFinder;module.exports=DijkstraFinder;},{"./AStarFinder":9}],17:[function(_dereq_,module,exports){var Util=_dereq_('../core/Util');var Heuristic=_dereq_('../core/Heuristic');var Node=_dereq_('../core/Node');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function IDAStarFinder(opt){opt=opt||{};this.allowDiagonal=opt.allowDiagonal;this.dontCrossCorners=opt.dontCrossCorners;this.diagonalMovement=opt.diagonalMovement;this.heuristic=opt.heuristic||Heuristic.manhattan;this.weight=opt.weight||1;this.trackRecursion=opt.trackRecursion||false;this.timeLimit=opt.timeLimit||Infinity;if(!this.diagonalMovement){if(!this.allowDiagonal){this.diagonalMovement=DiagonalMovement.Never;}else{if(this.dontCrossCorners){this.diagonalMovement=DiagonalMovement.OnlyWhenNoObstacles;}else{this.diagonalMovement=DiagonalMovement.IfAtMostOneObstacle;}}};if(this.diagonalMovement===DiagonalMovement.Never){this.heuristic=opt.heuristic||Heuristic.manhattan;}else{this.heuristic=opt.heuristic||Heuristic.octile;}};IDAStarFinder.prototype.findPath=function(startX,startY,endX,endY,grid){var nodesVisited=0;var startTime=new Date().getTime();var h=function(a,b){return this.heuristic(Math.abs(b.x-a.x),Math.abs(b.y-a.y));}.bind(this);var cost=function(a,b){return(a.x===b.x||a.y===b.y)?1:Math.SQRT2;};var search=function(node,g,cutoff,route,depth){nodesVisited++;if(this.timeLimit>0&&new Date().getTime()-startTime>this.timeLimit*1000){return Infinity;};var f=g+h(node,end)*this.weight;if(f>cutoff){return f;};if(node==end){route[depth]=[node.x,node.y];return node;};var min,t,k,neighbour;var neighbours=grid.getNeighbors(node,this.diagonalMovement);for(k=0,min=Infinity;neighbour=neighbours[k];++k){if(this.trackRecursion){neighbour.retainCount=neighbour.retainCount+1||1;if(neighbour.tested!==true){neighbour.tested=true;}};t=search(neighbour,g+cost(node,neighbour),cutoff,route,depth+1);if(t instanceof Node){route[depth]=[node.x,node.y];return t;};if(this.trackRecursion&&(--neighbour.retainCount)===0){neighbour.tested=false;};if(t<min){min=t;}};return min;}.bind(this);var start=grid.getNodeAt(startX,startY);var end=grid.getNodeAt(endX,endY);var cutOff=h(start,end);var j,route,t;for(j=0;true;++j){route=[];t=search(start,0,cutOff,route,0);if(t===Infinity){return[];};if(t instanceof Node){return route;};cutOff=t;};return[];};module.exports=IDAStarFinder;},{"../core/DiagonalMovement":3,"../core/Heuristic":5,"../core/Node":6,"../core/Util":7}],18:[function(_dereq_,module,exports){var JumpPointFinderBase=_dereq_('./JumpPointFinderBase');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function JPFAlwaysMoveDiagonally(opt){JumpPointFinderBase.call(this,opt);};JPFAlwaysMoveDiagonally.prototype=new JumpPointFinderBase();JPFAlwaysMoveDiagonally.prototype.constructor=JPFAlwaysMoveDiagonally;JPFAlwaysMoveDiagonally.prototype._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y)){return null;};if(this.trackJumpRecursion===true){grid.getNodeAt(x,y).tested=true;};if(grid.getNodeAt(x,y)===this.endNode){return[x,y];};if(dx!==0&&dy!==0){if((grid.isWalkableAt(x-dx,y+dy)&&!grid.isWalkableAt(x-dx,y))||(grid.isWalkableAt(x+dx,y-dy)&&!grid.isWalkableAt(x,y-dy))){return[x,y];};if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y)){return[x,y];}};else{if(dx!==0){if((grid.isWalkableAt(x+dx,y+1)&&!grid.isWalkableAt(x,y+1))||(grid.isWalkableAt(x+dx,y-1)&&!grid.isWalkableAt(x,y-1))){return[x,y];}};else{if((grid.isWalkableAt(x+1,y+dy)&&!grid.isWalkableAt(x+1,y))||(grid.isWalkableAt(x-1,y+dy)&&!grid.isWalkableAt(x-1,y))){return[x,y];}}};return this._jump(x+dx,y+dy,x,y);};JPFAlwaysMoveDiagonally.prototype._findNeighbors=function(node){var parent=node.parent,x=node.x,y=node.y,grid=this.grid,px,py,nx,ny,dx,dy,neighbors=[],neighborNodes,neighborNode,i,l;if(parent){px=parent.x;py=parent.y;dx=(x-px)/Math.max(Math.abs(x-px),1);dy=(y-py)/Math.max(Math.abs(y-py),1);if(dx!==0&&dy!==0){if(grid.isWalkableAt(x,y+dy)){neighbors.push([x,y+dy]);};if(grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y]);};if(grid.isWalkableAt(x+dx,y+dy)){neighbors.push([x+dx,y+dy]);};if(!grid.isWalkableAt(x-dx,y)){neighbors.push([x-dx,y+dy]);};if(!grid.isWalkableAt(x,y-dy)){neighbors.push([x+dx,y-dy]);}};else{if(dx===0){if(grid.isWalkableAt(x,y+dy)){neighbors.push([x,y+dy]);};if(!grid.isWalkableAt(x+1,y)){neighbors.push([x+1,y+dy]);};if(!grid.isWalkableAt(x-1,y)){neighbors.push([x-1,y+dy]);}};else{if(grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y]);};if(!grid.isWalkableAt(x,y+1)){neighbors.push([x+dx,y+1]);};if(!grid.isWalkableAt(x,y-1)){neighbors.push([x+dx,y-1]);}}}};else{neighborNodes=grid.getNeighbors(node,DiagonalMovement.Always);for(i=0,l=neighborNodes.length;i<l;++i){neighborNode=neighborNodes[i];neighbors.push([neighborNode.x,neighborNode.y]);}};return neighbors;};module.exports=JPFAlwaysMoveDiagonally;},{"../core/DiagonalMovement":3,"./JumpPointFinderBase":23}],19:[function(_dereq_,module,exports){var JumpPointFinderBase=_dereq_('./JumpPointFinderBase');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function JPFMoveDiagonallyIfAtMostOneObstacle(opt){JumpPointFinderBase.call(this,opt);};JPFMoveDiagonallyIfAtMostOneObstacle.prototype=new JumpPointFinderBase();JPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor=JPFMoveDiagonallyIfAtMostOneObstacle;JPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y)){return null;};if(this.trackJumpRecursion===true){grid.getNodeAt(x,y).tested=true;};if(grid.getNodeAt(x,y)===this.endNode){return[x,y];};if(dx!==0&&dy!==0){if((grid.isWalkableAt(x-dx,y+dy)&&!grid.isWalkableAt(x-dx,y))||(grid.isWalkableAt(x+dx,y-dy)&&!grid.isWalkableAt(x,y-dy))){return[x,y];};if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y)){return[x,y];}};else{if(dx!==0){if((grid.isWalkableAt(x+dx,y+1)&&!grid.isWalkableAt(x,y+1))||(grid.isWalkableAt(x+dx,y-1)&&!grid.isWalkableAt(x,y-1))){return[x,y];}};else{if((grid.isWalkableAt(x+1,y+dy)&&!grid.isWalkableAt(x+1,y))||(grid.isWalkableAt(x-1,y+dy)&&!grid.isWalkableAt(x-1,y))){return[x,y];}}};if(grid.isWalkableAt(x+dx,y)||grid.isWalkableAt(x,y+dy)){return this._jump(x+dx,y+dy,x,y);}else{return null;}};JPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors=function(node){var parent=node.parent,x=node.x,y=node.y,grid=this.grid,px,py,nx,ny,dx,dy,neighbors=[],neighborNodes,neighborNode,i,l;if(parent){px=parent.x;py=parent.y;dx=(x-px)/Math.max(Math.abs(x-px),1);dy=(y-py)/Math.max(Math.abs(y-py),1);if(dx!==0&&dy!==0){if(grid.isWalkableAt(x,y+dy)){neighbors.push([x,y+dy]);};if(grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y]);};if(grid.isWalkableAt(x,y+dy)||grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y+dy]);};if(!grid.isWalkableAt(x-dx,y)&&grid.isWalkableAt(x,y+dy)){neighbors.push([x-dx,y+dy]);};if(!grid.isWalkableAt(x,y-dy)&&grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y-dy]);}};else{if(dx===0){if(grid.isWalkableAt(x,y+dy)){neighbors.push([x,y+dy]);if(!grid.isWalkableAt(x+1,y)){neighbors.push([x+1,y+dy]);};if(!grid.isWalkableAt(x-1,y)){neighbors.push([x-1,y+dy]);}}};else{if(grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y]);if(!grid.isWalkableAt(x,y+1)){neighbors.push([x+dx,y+1]);};if(!grid.isWalkableAt(x,y-1)){neighbors.push([x+dx,y-1]);}}}}};else{neighborNodes=grid.getNeighbors(node,DiagonalMovement.IfAtMostOneObstacle);for(i=0,l=neighborNodes.length;i<l;++i){neighborNode=neighborNodes[i];neighbors.push([neighborNode.x,neighborNode.y]);}};return neighbors;};module.exports=JPFMoveDiagonallyIfAtMostOneObstacle;},{"../core/DiagonalMovement":3,"./JumpPointFinderBase":23}],20:[function(_dereq_,module,exports){var JumpPointFinderBase=_dereq_('./JumpPointFinderBase');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function JPFMoveDiagonallyIfNoObstacles(opt){JumpPointFinderBase.call(this,opt);};JPFMoveDiagonallyIfNoObstacles.prototype=new JumpPointFinderBase();JPFMoveDiagonallyIfNoObstacles.prototype.constructor=JPFMoveDiagonallyIfNoObstacles;JPFMoveDiagonallyIfNoObstacles.prototype._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y)){return null;};if(this.trackJumpRecursion===true){grid.getNodeAt(x,y).tested=true;};if(grid.getNodeAt(x,y)===this.endNode){return[x,y];};if(dx!==0&&dy!==0){if(this._jump(x+dx,y,x,y)||this._jump(x,y+dy,x,y)){return[x,y];}};else{if(dx!==0){if((grid.isWalkableAt(x,y-1)&&!grid.isWalkableAt(x-dx,y-1))||(grid.isWalkableAt(x,y+1)&&!grid.isWalkableAt(x-dx,y+1))){return[x,y];}};else if(dy!==0){if((grid.isWalkableAt(x-1,y)&&!grid.isWalkableAt(x-1,y-dy))||(grid.isWalkableAt(x+1,y)&&!grid.isWalkableAt(x+1,y-dy))){return[x,y];}}};if(grid.isWalkableAt(x+dx,y)&&grid.isWalkableAt(x,y+dy)){return this._jump(x+dx,y+dy,x,y);}else{return null;}};JPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors=function(node){var parent=node.parent,x=node.x,y=node.y,grid=this.grid,px,py,nx,ny,dx,dy,neighbors=[],neighborNodes,neighborNode,i,l;if(parent){px=parent.x;py=parent.y;dx=(x-px)/Math.max(Math.abs(x-px),1);dy=(y-py)/Math.max(Math.abs(y-py),1);if(dx!==0&&dy!==0){if(grid.isWalkableAt(x,y+dy)){neighbors.push([x,y+dy]);};if(grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y]);};if(grid.isWalkableAt(x,y+dy)&&grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y+dy]);}};else{var isNextWalkable;if(dx!==0){isNextWalkable=grid.isWalkableAt(x+dx,y);var isTopWalkable=grid.isWalkableAt(x,y+1);var isBottomWalkable=grid.isWalkableAt(x,y-1);if(isNextWalkable){neighbors.push([x+dx,y]);if(isTopWalkable){neighbors.push([x+dx,y+1]);};if(isBottomWalkable){neighbors.push([x+dx,y-1]);}};if(isTopWalkable){neighbors.push([x,y+1]);};if(isBottomWalkable){neighbors.push([x,y-1]);}};else if(dy!==0){isNextWalkable=grid.isWalkableAt(x,y+dy);var isRightWalkable=grid.isWalkableAt(x+1,y);var isLeftWalkable=grid.isWalkableAt(x-1,y);if(isNextWalkable){neighbors.push([x,y+dy]);if(isRightWalkable){neighbors.push([x+1,y+dy]);};if(isLeftWalkable){neighbors.push([x-1,y+dy]);}};if(isRightWalkable){neighbors.push([x+1,y]);};if(isLeftWalkable){neighbors.push([x-1,y]);}}}};else{neighborNodes=grid.getNeighbors(node,DiagonalMovement.OnlyWhenNoObstacles);for(i=0,l=neighborNodes.length;i<l;++i){neighborNode=neighborNodes[i];neighbors.push([neighborNode.x,neighborNode.y]);}};return neighbors;};module.exports=JPFMoveDiagonallyIfNoObstacles;},{"../core/DiagonalMovement":3,"./JumpPointFinderBase":23}],21:[function(_dereq_,module,exports){var JumpPointFinderBase=_dereq_('./JumpPointFinderBase');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function JPFNeverMoveDiagonally(opt){JumpPointFinderBase.call(this,opt);};JPFNeverMoveDiagonally.prototype=new JumpPointFinderBase();JPFNeverMoveDiagonally.prototype.constructor=JPFNeverMoveDiagonally;JPFNeverMoveDiagonally.prototype._jump=function(x,y,px,py){var grid=this.grid,dx=x-px,dy=y-py;if(!grid.isWalkableAt(x,y)){return null;};if(this.trackJumpRecursion===true){grid.getNodeAt(x,y).tested=true;};if(grid.getNodeAt(x,y)===this.endNode){return[x,y];};if(dx!==0){if((grid.isWalkableAt(x,y-1)&&!grid.isWalkableAt(x-dx,y-1))||(grid.isWalkableAt(x,y+1)&&!grid.isWalkableAt(x-dx,y+1))){return[x,y];}};else if(dy!==0){if((grid.isWalkableAt(x-1,y)&&!grid.isWalkableAt(x-1,y-dy))||(grid.isWalkableAt(x+1,y)&&!grid.isWalkableAt(x+1,y-dy))){return[x,y];};if(this._jump(x+1,y,x,y)||this._jump(x-1,y,x,y)){return[x,y];}};else{throw new Error("Only horizontal and vertical movements are allowed");};return this._jump(x+dx,y+dy,x,y);};JPFNeverMoveDiagonally.prototype._findNeighbors=function(node){var parent=node.parent,x=node.x,y=node.y,grid=this.grid,px,py,nx,ny,dx,dy,neighbors=[],neighborNodes,neighborNode,i,l;if(parent){px=parent.x;py=parent.y;dx=(x-px)/Math.max(Math.abs(x-px),1);dy=(y-py)/Math.max(Math.abs(y-py),1);if(dx!==0){if(grid.isWalkableAt(x,y-1)){neighbors.push([x,y-1]);};if(grid.isWalkableAt(x,y+1)){neighbors.push([x,y+1]);};if(grid.isWalkableAt(x+dx,y)){neighbors.push([x+dx,y]);}};else if(dy!==0){if(grid.isWalkableAt(x-1,y)){neighbors.push([x-1,y]);};if(grid.isWalkableAt(x+1,y)){neighbors.push([x+1,y]);};if(grid.isWalkableAt(x,y+dy)){neighbors.push([x,y+dy]);}}};else{neighborNodes=grid.getNeighbors(node,DiagonalMovement.Never);for(i=0,l=neighborNodes.length;i<l;++i){neighborNode=neighborNodes[i];neighbors.push([neighborNode.x,neighborNode.y]);}};return neighbors;};module.exports=JPFNeverMoveDiagonally;},{"../core/DiagonalMovement":3,"./JumpPointFinderBase":23}],22:[function(_dereq_,module,exports){var DiagonalMovement=_dereq_('../core/DiagonalMovement');var JPFNeverMoveDiagonally=_dereq_('./JPFNeverMoveDiagonally');var JPFAlwaysMoveDiagonally=_dereq_('./JPFAlwaysMoveDiagonally');var JPFMoveDiagonallyIfNoObstacles=_dereq_('./JPFMoveDiagonallyIfNoObstacles');var JPFMoveDiagonallyIfAtMostOneObstacle=_dereq_('./JPFMoveDiagonallyIfAtMostOneObstacle');function JumpPointFinder(opt){opt=opt||{};if(opt.diagonalMovement===DiagonalMovement.Never){return new JPFNeverMoveDiagonally(opt);}else if(opt.diagonalMovement===DiagonalMovement.Always){return new JPFAlwaysMoveDiagonally(opt);}else if(opt.diagonalMovement===DiagonalMovement.OnlyWhenNoObstacles){return new JPFMoveDiagonallyIfNoObstacles(opt);}else{return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);}};module.exports=JumpPointFinder;},{"../core/DiagonalMovement":3,"./JPFAlwaysMoveDiagonally":18,"./JPFMoveDiagonallyIfAtMostOneObstacle":19,"./JPFMoveDiagonallyIfNoObstacles":20,"./JPFNeverMoveDiagonally":21}],23:[function(_dereq_,module,exports){var Heap=_dereq_('heap');var Util=_dereq_('../core/Util');var Heuristic=_dereq_('../core/Heuristic');var DiagonalMovement=_dereq_('../core/DiagonalMovement');function JumpPointFinderBase(opt){opt=opt||{};this.heuristic=opt.heuristic||Heuristic.manhattan;this.trackJumpRecursion=opt.trackJumpRecursion||false;};JumpPointFinderBase.prototype.findPath=function(startX,startY,endX,endY,grid){var openList=this.openList=new Heap(function(nodeA,nodeB){return nodeA.f-nodeB.f;}),startNode=this.startNode=grid.getNodeAt(startX,startY),endNode=this.endNode=grid.getNodeAt(endX,endY),node;this.grid=grid;startNode.g=0;startNode.f=0;openList.push(startNode);startNode.opened=true;while(!openList.empty()){node=openList.pop();node.closed=true;if(node===endNode){return Util.expandPath(Util.backtrace(endNode));};this._identifySuccessors(node);};return[];};JumpPointFinderBase.prototype._identifySuccessors=function(node){var grid=this.grid,heuristic=this.heuristic,openList=this.openList,endX=this.endNode.x,endY=this.endNode.y,neighbors,neighbor,jumpPoint,i,l,x=node.x,y=node.y,jx,jy,dx,dy,d,ng,jumpNode,abs=Math.abs,max=Math.max;neighbors=this._findNeighbors(node);for(i=0,l=neighbors.length;i<l;++i){neighbor=neighbors[i];jumpPoint=this._jump(neighbor[0],neighbor[1],x,y);if(jumpPoint){jx=jumpPoint[0];jy=jumpPoint[1];jumpNode=grid.getNodeAt(jx,jy);if(jumpNode.closed){continue;};d=Heuristic.octile(abs(jx-x),abs(jy-y));ng=node.g+d;if(!jumpNode.opened||ng<jumpNode.g){jumpNode.g=ng;jumpNode.h=jumpNode.h||heuristic(abs(jx-endX),abs(jy-endY));jumpNode.f=jumpNode.g+jumpNode.h;jumpNode.parent=node;if(!jumpNode.opened){openList.push(jumpNode);jumpNode.opened=true;}else{openList.updateItem(jumpNode);}}}}};module.exports=JumpPointFinderBase;},{"../core/DiagonalMovement":3,"../core/Heuristic":5,"../core/Util":7,"heap":1}]},{},[8]);(8)});